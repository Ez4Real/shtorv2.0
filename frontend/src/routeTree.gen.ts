/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainlayoutImport } from './routes/_main_layout'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthlayoutImport } from './routes/_auth_layout'
import { Route as MainlayoutIndexImport } from './routes/_main_layout/index'
import { Route as MainlayoutProductImport } from './routes/_main_layout/product'
import { Route as MainlayoutPrivacyPolicyImport } from './routes/_main_layout/privacy-policy'
import { Route as MainlayoutAboutUsImport } from './routes/_main_layout/about-us'
import { Route as AuthlayoutSignupImport } from './routes/_auth_layout/signup'
import { Route as AuthlayoutResetPasswordImport } from './routes/_auth_layout/reset-password'
import { Route as AuthlayoutRecoverPasswordImport } from './routes/_auth_layout/recover-password'
import { Route as AuthlayoutLoginImport } from './routes/_auth_layout/login'
import { Route as MainlayoutCollectionsIndexImport } from './routes/_main_layout/collections/index'
import { Route as LayoutAdminIndexImport } from './routes/_layout/admin/index'
import { Route as MainlayoutCollectionsIdImport } from './routes/_main_layout/collections/$id'
import { Route as LayoutAdminUsersImport } from './routes/_layout/admin/users'
import { Route as LayoutAdminSettingsImport } from './routes/_layout/admin/settings'
import { Route as LayoutAdminProductsImport } from './routes/_layout/admin/products'
import { Route as LayoutAdminCollectionsImport } from './routes/_layout/admin/collections'

// Create/Update Routes

const MainlayoutRoute = MainlayoutImport.update({
  id: '/_main_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthlayoutRoute = AuthlayoutImport.update({
  id: '/_auth_layout',
  getParentRoute: () => rootRoute,
} as any)

const MainlayoutIndexRoute = MainlayoutIndexImport.update({
  path: '/',
  getParentRoute: () => MainlayoutRoute,
} as any)

const MainlayoutProductRoute = MainlayoutProductImport.update({
  path: '/product',
  getParentRoute: () => MainlayoutRoute,
} as any)

const MainlayoutPrivacyPolicyRoute = MainlayoutPrivacyPolicyImport.update({
  path: '/privacy-policy',
  getParentRoute: () => MainlayoutRoute,
} as any)

const MainlayoutAboutUsRoute = MainlayoutAboutUsImport.update({
  path: '/about-us',
  getParentRoute: () => MainlayoutRoute,
} as any)

const AuthlayoutSignupRoute = AuthlayoutSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthlayoutRoute,
} as any)

const AuthlayoutResetPasswordRoute = AuthlayoutResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => AuthlayoutRoute,
} as any)

const AuthlayoutRecoverPasswordRoute = AuthlayoutRecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => AuthlayoutRoute,
} as any)

const AuthlayoutLoginRoute = AuthlayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthlayoutRoute,
} as any)

const MainlayoutCollectionsIndexRoute = MainlayoutCollectionsIndexImport.update(
  {
    path: '/collections/',
    getParentRoute: () => MainlayoutRoute,
  } as any,
)

const LayoutAdminIndexRoute = LayoutAdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => LayoutRoute,
} as any)

const MainlayoutCollectionsIdRoute = MainlayoutCollectionsIdImport.update({
  path: '/collections/$id',
  getParentRoute: () => MainlayoutRoute,
} as any)

const LayoutAdminUsersRoute = LayoutAdminUsersImport.update({
  path: '/admin/users',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminSettingsRoute = LayoutAdminSettingsImport.update({
  path: '/admin/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminProductsRoute = LayoutAdminProductsImport.update({
  path: '/admin/products',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminCollectionsRoute = LayoutAdminCollectionsImport.update({
  path: '/admin/collections',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth_layout': {
      preLoaderRoute: typeof AuthlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_main_layout': {
      preLoaderRoute: typeof MainlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth_layout/login': {
      preLoaderRoute: typeof AuthlayoutLoginImport
      parentRoute: typeof AuthlayoutImport
    }
    '/_auth_layout/recover-password': {
      preLoaderRoute: typeof AuthlayoutRecoverPasswordImport
      parentRoute: typeof AuthlayoutImport
    }
    '/_auth_layout/reset-password': {
      preLoaderRoute: typeof AuthlayoutResetPasswordImport
      parentRoute: typeof AuthlayoutImport
    }
    '/_auth_layout/signup': {
      preLoaderRoute: typeof AuthlayoutSignupImport
      parentRoute: typeof AuthlayoutImport
    }
    '/_main_layout/about-us': {
      preLoaderRoute: typeof MainlayoutAboutUsImport
      parentRoute: typeof MainlayoutImport
    }
    '/_main_layout/privacy-policy': {
      preLoaderRoute: typeof MainlayoutPrivacyPolicyImport
      parentRoute: typeof MainlayoutImport
    }
    '/_main_layout/product': {
      preLoaderRoute: typeof MainlayoutProductImport
      parentRoute: typeof MainlayoutImport
    }
    '/_main_layout/': {
      preLoaderRoute: typeof MainlayoutIndexImport
      parentRoute: typeof MainlayoutImport
    }
    '/_layout/admin/collections': {
      preLoaderRoute: typeof LayoutAdminCollectionsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/products': {
      preLoaderRoute: typeof LayoutAdminProductsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/settings': {
      preLoaderRoute: typeof LayoutAdminSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/users': {
      preLoaderRoute: typeof LayoutAdminUsersImport
      parentRoute: typeof LayoutImport
    }
    '/_main_layout/collections/$id': {
      preLoaderRoute: typeof MainlayoutCollectionsIdImport
      parentRoute: typeof MainlayoutImport
    }
    '/_layout/admin/': {
      preLoaderRoute: typeof LayoutAdminIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_main_layout/collections/': {
      preLoaderRoute: typeof MainlayoutCollectionsIndexImport
      parentRoute: typeof MainlayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthlayoutRoute.addChildren([
    AuthlayoutLoginRoute,
    AuthlayoutRecoverPasswordRoute,
    AuthlayoutResetPasswordRoute,
    AuthlayoutSignupRoute,
  ]),
  LayoutRoute.addChildren([
    LayoutAdminCollectionsRoute,
    LayoutAdminProductsRoute,
    LayoutAdminSettingsRoute,
    LayoutAdminUsersRoute,
    LayoutAdminIndexRoute,
  ]),
  MainlayoutRoute.addChildren([
    MainlayoutAboutUsRoute,
    MainlayoutPrivacyPolicyRoute,
    MainlayoutProductRoute,
    MainlayoutIndexRoute,
    MainlayoutCollectionsIdRoute,
    MainlayoutCollectionsIndexRoute,
  ]),
])

/* prettier-ignore-end */
